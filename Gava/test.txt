// class version 56.0 (56)
// access flags 0x21
public class Test/Test {

  // compiled from: Test.java

  // access flags 0x2
  private I a

  // access flags 0x2
  private F b

  // access flags 0x1
  public <init>(IF)V
   L0
    LINENUMBER 8 L0
    ALOAD 0
    INVOKESPECIAL java/lang/Object.<init> ()V
   L1
    LINENUMBER 9 L1
    ALOAD 0
    ILOAD 1
    PUTFIELD Test/Test.a : I
   L2
    LINENUMBER 10 L2
    ALOAD 0
    FLOAD 2
    PUTFIELD Test/Test.b : F
   L3
    LINENUMBER 11 L3
    RETURN
   L4
    LOCALVARIABLE this LTest/Test; L0 L4 0
    LOCALVARIABLE i I L0 L4 1
    LOCALVARIABLE f F L0 L4 2
    MAXSTACK = 2
    MAXLOCALS = 3

  // access flags 0x2
  private add(I)V
   L0
    LINENUMBER 16 L0
    ALOAD 0
    DUP
    GETFIELD Test/Test.a : I
    ILOAD 1
    IADD
    PUTFIELD Test/Test.a : I
   L1
    LINENUMBER 18 L1
    RETURN
   L2
    LOCALVARIABLE this LTest/Test; L0 L2 0
    LOCALVARIABLE a I L0 L2 1
    MAXSTACK = 3
    MAXLOCALS = 2

  // access flags 0x9
  public static main([Ljava/lang/String;)V
   L0
    LINENUMBER 21 L0
    NEW Test/Test
    DUP
    ICONST_2
    FCONST_2
    INVOKESPECIAL Test/Test.<init> (IF)V
    ASTORE 1
   L1
    LINENUMBER 22 L1
    ALOAD 1
    BIPUSH 8
    INVOKEVIRTUAL Test/Test.add (I)V
   L2
    LINENUMBER 23 L2
    ALOAD 1
    GETFIELD Test/Test.a : I
    ISTORE 2
   L3
    LINENUMBER 24 L3
    RETURN
   L4
    LOCALVARIABLE args [Ljava/lang/String; L0 L4 0
    LOCALVARIABLE test LTest/Test; L1 L4 1
    LOCALVARIABLE c I L3 L4 2
    MAXSTACK = 4
    MAXLOCALS = 3
}